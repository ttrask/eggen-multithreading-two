#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppStats
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="c:\\TEMP\\Stats.sdf")]
	public partial class StatsContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDropFiles(DropFiles instance);
    partial void UpdateDropFiles(DropFiles instance);
    partial void DeleteDropFiles(DropFiles instance);
    partial void InsertDropFileStores(DropFileStores instance);
    partial void UpdateDropFileStores(DropFileStores instance);
    partial void DeleteDropFileStores(DropFileStores instance);
    partial void InsertEnvironments(Environments instance);
    partial void UpdateEnvironments(Environments instance);
    partial void DeleteEnvironments(Environments instance);
    partial void InsertLanguages(Languages instance);
    partial void UpdateLanguages(Languages instance);
    partial void DeleteLanguages(Languages instance);
    partial void InsertRecords(Records instance);
    partial void UpdateRecords(Records instance);
    partial void DeleteRecords(Records instance);
    partial void InsertTimeStatistics(TimeStatistics instance);
    partial void UpdateTimeStatistics(TimeStatistics instance);
    partial void DeleteTimeStatistics(TimeStatistics instance);
    partial void InsertTimeTypes(TimeTypes instance);
    partial void UpdateTimeTypes(TimeTypes instance);
    partial void DeleteTimeTypes(TimeTypes instance);
    #endregion
		
		public StatsContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatsContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatsContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatsContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DropFiles> DropFiles
		{
			get
			{
				return this.GetTable<DropFiles>();
			}
		}
		
		public System.Data.Linq.Table<DropFileStores> DropFileStores
		{
			get
			{
				return this.GetTable<DropFileStores>();
			}
		}
		
		public System.Data.Linq.Table<Environments> Environments
		{
			get
			{
				return this.GetTable<Environments>();
			}
		}
		
		public System.Data.Linq.Table<Languages> Languages
		{
			get
			{
				return this.GetTable<Languages>();
			}
		}
		
		public System.Data.Linq.Table<Records> Records
		{
			get
			{
				return this.GetTable<Records>();
			}
		}
		
		public System.Data.Linq.Table<TimeStatistics> TimeStatistics
		{
			get
			{
				return this.GetTable<TimeStatistics>();
			}
		}
		
		public System.Data.Linq.Table<TimeTypes> TimeTypes
		{
			get
			{
				return this.GetTable<TimeTypes>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class DropFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DropFileId;
		
		private string _Filename;
		
		private System.DateTime _CraeteDtTm;
		
		private bool _IsActive;
		
		private int _LanguageId;
		
		private int _EnvironmentId;
		
		private EntityRef<Environments> _Environments;
		
		private EntityRef<Languages> _Languages;
		
		private EntitySet<Records> _Records;
		
		private EntitySet<DropFileStores> _DropFileStores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDropFileIdChanging(int value);
    partial void OnDropFileIdChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnCraeteDtTmChanging(System.DateTime value);
    partial void OnCraeteDtTmChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnEnvironmentIdChanging(int value);
    partial void OnEnvironmentIdChanged();
    #endregion
		
		public DropFiles()
		{
			this._Environments = default(EntityRef<Environments>);
			this._Languages = default(EntityRef<Languages>);
			this._Records = new EntitySet<Records>(new Action<Records>(this.attach_Records), new Action<Records>(this.detach_Records));
			this._DropFileStores = new EntitySet<DropFileStores>(new Action<DropFileStores>(this.attach_DropFileStores), new Action<DropFileStores>(this.detach_DropFileStores));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropFileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DropFileId
		{
			get
			{
				return this._DropFileId;
			}
			set
			{
				if ((this._DropFileId != value))
				{
					this.OnDropFileIdChanging(value);
					this.SendPropertyChanging();
					this._DropFileId = value;
					this.SendPropertyChanged("DropFileId");
					this.OnDropFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CraeteDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime CraeteDtTm
		{
			get
			{
				return this._CraeteDtTm;
			}
			set
			{
				if ((this._CraeteDtTm != value))
				{
					this.OnCraeteDtTmChanging(value);
					this.SendPropertyChanging();
					this._CraeteDtTm = value;
					this.SendPropertyChanged("CraeteDtTm");
					this.OnCraeteDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL")]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Languages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentId", DbType="Int NOT NULL")]
		public int EnvironmentId
		{
			get
			{
				return this._EnvironmentId;
			}
			set
			{
				if ((this._EnvironmentId != value))
				{
					if (this._Environments.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnvironmentIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentId = value;
					this.SendPropertyChanged("EnvironmentId");
					this.OnEnvironmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DropFiles_Environments", Storage="_Environments", ThisKey="EnvironmentId", OtherKey="EnvinronmentId", IsForeignKey=true)]
		public Environments Environments
		{
			get
			{
				return this._Environments.Entity;
			}
			set
			{
				Environments previousValue = this._Environments.Entity;
				if (((previousValue != value) 
							|| (this._Environments.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Environments.Entity = null;
						previousValue.DropFiles.Remove(this);
					}
					this._Environments.Entity = value;
					if ((value != null))
					{
						value.DropFiles.Add(this);
						this._EnvironmentId = value.EnvinronmentId;
					}
					else
					{
						this._EnvironmentId = default(int);
					}
					this.SendPropertyChanged("Environments");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DropFiles_Languages", Storage="_Languages", ThisKey="LanguageId", OtherKey="LanguageId", IsForeignKey=true)]
		public Languages Languages
		{
			get
			{
				return this._Languages.Entity;
			}
			set
			{
				Languages previousValue = this._Languages.Entity;
				if (((previousValue != value) 
							|| (this._Languages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Languages.Entity = null;
						previousValue.DropFiles.Remove(this);
					}
					this._Languages.Entity = value;
					if ((value != null))
					{
						value.DropFiles.Add(this);
						this._LanguageId = value.LanguageId;
					}
					else
					{
						this._LanguageId = default(int);
					}
					this.SendPropertyChanged("Languages");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DropFiles_RecordId", Storage="_Records", ThisKey="DropFileId", OtherKey="DropFileId", DeleteRule="CASCADE")]
		public EntitySet<Records> Records
		{
			get
			{
				return this._Records;
			}
			set
			{
				this._Records.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DropFileStores_DropFileId", Storage="_DropFileStores", ThisKey="DropFileId", OtherKey="DropFileId", DeleteRule="CASCADE")]
		public EntitySet<DropFileStores> DropFileStores
		{
			get
			{
				return this._DropFileStores;
			}
			set
			{
				this._DropFileStores.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Records(Records entity)
		{
			this.SendPropertyChanging();
			entity.DropFiles = this;
		}
		
		private void detach_Records(Records entity)
		{
			this.SendPropertyChanging();
			entity.DropFiles = null;
		}
		
		private void attach_DropFileStores(DropFileStores entity)
		{
			this.SendPropertyChanging();
			entity.DropFiles = this;
		}
		
		private void detach_DropFileStores(DropFileStores entity)
		{
			this.SendPropertyChanging();
			entity.DropFiles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class DropFileStores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _DropFileRawData;
		
		private int _DropFileId;
		
		private int _DropFileStoreId;
		
		private EntityRef<DropFiles> _DropFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDropFileRawDataChanging(System.Data.Linq.Binary value);
    partial void OnDropFileRawDataChanged();
    partial void OnDropFileIdChanging(int value);
    partial void OnDropFileIdChanged();
    partial void OnDropFileStoreIdChanging(int value);
    partial void OnDropFileStoreIdChanged();
    #endregion
		
		public DropFileStores()
		{
			this._DropFiles = default(EntityRef<DropFiles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropFileRawData", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DropFileRawData
		{
			get
			{
				return this._DropFileRawData;
			}
			set
			{
				if ((this._DropFileRawData != value))
				{
					this.OnDropFileRawDataChanging(value);
					this.SendPropertyChanging();
					this._DropFileRawData = value;
					this.SendPropertyChanged("DropFileRawData");
					this.OnDropFileRawDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropFileId", DbType="Int NOT NULL")]
		public int DropFileId
		{
			get
			{
				return this._DropFileId;
			}
			set
			{
				if ((this._DropFileId != value))
				{
					if (this._DropFiles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDropFileIdChanging(value);
					this.SendPropertyChanging();
					this._DropFileId = value;
					this.SendPropertyChanged("DropFileId");
					this.OnDropFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropFileStoreId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DropFileStoreId
		{
			get
			{
				return this._DropFileStoreId;
			}
			set
			{
				if ((this._DropFileStoreId != value))
				{
					this.OnDropFileStoreIdChanging(value);
					this.SendPropertyChanging();
					this._DropFileStoreId = value;
					this.SendPropertyChanged("DropFileStoreId");
					this.OnDropFileStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DropFileStores_DropFileId", Storage="_DropFiles", ThisKey="DropFileId", OtherKey="DropFileId", IsForeignKey=true, DeleteOnNull=true)]
		public DropFiles DropFiles
		{
			get
			{
				return this._DropFiles.Entity;
			}
			set
			{
				DropFiles previousValue = this._DropFiles.Entity;
				if (((previousValue != value) 
							|| (this._DropFiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DropFiles.Entity = null;
						previousValue.DropFileStores.Remove(this);
					}
					this._DropFiles.Entity = value;
					if ((value != null))
					{
						value.DropFileStores.Add(this);
						this._DropFileId = value.DropFileId;
					}
					else
					{
						this._DropFileId = default(int);
					}
					this.SendPropertyChanged("DropFiles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Environments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EnvinronmentId;
		
		private string _Name;
		
		private EntitySet<DropFiles> _DropFiles;
		
		private EntitySet<Records> _Records;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnvinronmentIdChanging(int value);
    partial void OnEnvinronmentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Environments()
		{
			this._DropFiles = new EntitySet<DropFiles>(new Action<DropFiles>(this.attach_DropFiles), new Action<DropFiles>(this.detach_DropFiles));
			this._Records = new EntitySet<Records>(new Action<Records>(this.attach_Records), new Action<Records>(this.detach_Records));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvinronmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EnvinronmentId
		{
			get
			{
				return this._EnvinronmentId;
			}
			set
			{
				if ((this._EnvinronmentId != value))
				{
					this.OnEnvinronmentIdChanging(value);
					this.SendPropertyChanging();
					this._EnvinronmentId = value;
					this.SendPropertyChanged("EnvinronmentId");
					this.OnEnvinronmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DropFiles_Environments", Storage="_DropFiles", ThisKey="EnvinronmentId", OtherKey="EnvironmentId", DeleteRule="NO ACTION")]
		public EntitySet<DropFiles> DropFiles
		{
			get
			{
				return this._DropFiles;
			}
			set
			{
				this._DropFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Records_Environments", Storage="_Records", ThisKey="EnvinronmentId", OtherKey="EnvironmentId", DeleteRule="NO ACTION")]
		public EntitySet<Records> Records
		{
			get
			{
				return this._Records;
			}
			set
			{
				this._Records.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DropFiles(DropFiles entity)
		{
			this.SendPropertyChanging();
			entity.Environments = this;
		}
		
		private void detach_DropFiles(DropFiles entity)
		{
			this.SendPropertyChanging();
			entity.Environments = null;
		}
		
		private void attach_Records(Records entity)
		{
			this.SendPropertyChanging();
			entity.Environments = this;
		}
		
		private void detach_Records(Records entity)
		{
			this.SendPropertyChanging();
			entity.Environments = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Languages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LanguageId;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<DropFiles> _DropFiles;
		
		private EntitySet<Records> _Records;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Languages()
		{
			this._DropFiles = new EntitySet<DropFiles>(new Action<DropFiles>(this.attach_DropFiles), new Action<DropFiles>(this.detach_DropFiles));
			this._Records = new EntitySet<Records>(new Action<Records>(this.attach_Records), new Action<Records>(this.detach_Records));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DropFiles_Languages", Storage="_DropFiles", ThisKey="LanguageId", OtherKey="LanguageId", DeleteRule="NO ACTION")]
		public EntitySet<DropFiles> DropFiles
		{
			get
			{
				return this._DropFiles;
			}
			set
			{
				this._DropFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Records_Languages", Storage="_Records", ThisKey="LanguageId", OtherKey="LanguageId", DeleteRule="NO ACTION")]
		public EntitySet<Records> Records
		{
			get
			{
				return this._Records;
			}
			set
			{
				this._Records.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DropFiles(DropFiles entity)
		{
			this.SendPropertyChanging();
			entity.Languages = this;
		}
		
		private void detach_DropFiles(DropFiles entity)
		{
			this.SendPropertyChanging();
			entity.Languages = null;
		}
		
		private void attach_Records(Records entity)
		{
			this.SendPropertyChanging();
			entity.Languages = this;
		}
		
		private void detach_Records(Records entity)
		{
			this.SendPropertyChanging();
			entity.Languages = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Records : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordId;
		
		private System.DateTime _CreateDtTm;
		
		private string _CreateUser;
		
		private int _DropFileId;
		
		private int _Size;
		
		private int _ProcessorCount;
		
		private System.DateTime _ExecuteDtTm;
		
		private decimal _TimeValue;
		
		private int _TimeTypeId;
		
		private int _LanguageId;
		
		private int _EnvironmentId;
		
		private EntityRef<DropFiles> _DropFiles;
		
		private EntityRef<Environments> _Environments;
		
		private EntityRef<Languages> _Languages;
		
		private EntityRef<TimeTypes> _TimeTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIdChanging(int value);
    partial void OnRecordIdChanged();
    partial void OnCreateDtTmChanging(System.DateTime value);
    partial void OnCreateDtTmChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnDropFileIdChanging(int value);
    partial void OnDropFileIdChanged();
    partial void OnSizeChanging(int value);
    partial void OnSizeChanged();
    partial void OnProcessorCountChanging(int value);
    partial void OnProcessorCountChanged();
    partial void OnExecuteDtTmChanging(System.DateTime value);
    partial void OnExecuteDtTmChanged();
    partial void OnTimeValueChanging(decimal value);
    partial void OnTimeValueChanged();
    partial void OnTimeTypeIdChanging(int value);
    partial void OnTimeTypeIdChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnEnvironmentIdChanging(int value);
    partial void OnEnvironmentIdChanged();
    #endregion
		
		public Records()
		{
			this._DropFiles = default(EntityRef<DropFiles>);
			this._Environments = default(EntityRef<Environments>);
			this._Languages = default(EntityRef<Languages>);
			this._TimeTypes = default(EntityRef<TimeTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDtTm
		{
			get
			{
				return this._CreateDtTm;
			}
			set
			{
				if ((this._CreateDtTm != value))
				{
					this.OnCreateDtTmChanging(value);
					this.SendPropertyChanging();
					this._CreateDtTm = value;
					this.SendPropertyChanged("CreateDtTm");
					this.OnCreateDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropFileId", DbType="Int NOT NULL")]
		public int DropFileId
		{
			get
			{
				return this._DropFileId;
			}
			set
			{
				if ((this._DropFileId != value))
				{
					if (this._DropFiles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDropFileIdChanging(value);
					this.SendPropertyChanging();
					this._DropFileId = value;
					this.SendPropertyChanged("DropFileId");
					this.OnDropFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int NOT NULL")]
		public int Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorCount", DbType="Int NOT NULL")]
		public int ProcessorCount
		{
			get
			{
				return this._ProcessorCount;
			}
			set
			{
				if ((this._ProcessorCount != value))
				{
					this.OnProcessorCountChanging(value);
					this.SendPropertyChanging();
					this._ProcessorCount = value;
					this.SendPropertyChanged("ProcessorCount");
					this.OnProcessorCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecuteDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime ExecuteDtTm
		{
			get
			{
				return this._ExecuteDtTm;
			}
			set
			{
				if ((this._ExecuteDtTm != value))
				{
					this.OnExecuteDtTmChanging(value);
					this.SendPropertyChanging();
					this._ExecuteDtTm = value;
					this.SendPropertyChanged("ExecuteDtTm");
					this.OnExecuteDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeValue", DbType="Decimal(18,0) NOT NULL")]
		public decimal TimeValue
		{
			get
			{
				return this._TimeValue;
			}
			set
			{
				if ((this._TimeValue != value))
				{
					this.OnTimeValueChanging(value);
					this.SendPropertyChanging();
					this._TimeValue = value;
					this.SendPropertyChanged("TimeValue");
					this.OnTimeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTypeId", DbType="Int NOT NULL")]
		public int TimeTypeId
		{
			get
			{
				return this._TimeTypeId;
			}
			set
			{
				if ((this._TimeTypeId != value))
				{
					if (this._TimeTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTimeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TimeTypeId = value;
					this.SendPropertyChanged("TimeTypeId");
					this.OnTimeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL")]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Languages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentId", DbType="Int NOT NULL")]
		public int EnvironmentId
		{
			get
			{
				return this._EnvironmentId;
			}
			set
			{
				if ((this._EnvironmentId != value))
				{
					if (this._Environments.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnvironmentIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentId = value;
					this.SendPropertyChanged("EnvironmentId");
					this.OnEnvironmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DropFiles_RecordId", Storage="_DropFiles", ThisKey="DropFileId", OtherKey="DropFileId", IsForeignKey=true, DeleteOnNull=true)]
		public DropFiles DropFiles
		{
			get
			{
				return this._DropFiles.Entity;
			}
			set
			{
				DropFiles previousValue = this._DropFiles.Entity;
				if (((previousValue != value) 
							|| (this._DropFiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DropFiles.Entity = null;
						previousValue.Records.Remove(this);
					}
					this._DropFiles.Entity = value;
					if ((value != null))
					{
						value.Records.Add(this);
						this._DropFileId = value.DropFileId;
					}
					else
					{
						this._DropFileId = default(int);
					}
					this.SendPropertyChanged("DropFiles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Records_Environments", Storage="_Environments", ThisKey="EnvironmentId", OtherKey="EnvinronmentId", IsForeignKey=true)]
		public Environments Environments
		{
			get
			{
				return this._Environments.Entity;
			}
			set
			{
				Environments previousValue = this._Environments.Entity;
				if (((previousValue != value) 
							|| (this._Environments.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Environments.Entity = null;
						previousValue.Records.Remove(this);
					}
					this._Environments.Entity = value;
					if ((value != null))
					{
						value.Records.Add(this);
						this._EnvironmentId = value.EnvinronmentId;
					}
					else
					{
						this._EnvironmentId = default(int);
					}
					this.SendPropertyChanged("Environments");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Records_Languages", Storage="_Languages", ThisKey="LanguageId", OtherKey="LanguageId", IsForeignKey=true)]
		public Languages Languages
		{
			get
			{
				return this._Languages.Entity;
			}
			set
			{
				Languages previousValue = this._Languages.Entity;
				if (((previousValue != value) 
							|| (this._Languages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Languages.Entity = null;
						previousValue.Records.Remove(this);
					}
					this._Languages.Entity = value;
					if ((value != null))
					{
						value.Records.Add(this);
						this._LanguageId = value.LanguageId;
					}
					else
					{
						this._LanguageId = default(int);
					}
					this.SendPropertyChanged("Languages");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Records_TimeTypes", Storage="_TimeTypes", ThisKey="TimeTypeId", OtherKey="TimeTypeId", IsForeignKey=true)]
		public TimeTypes TimeTypes
		{
			get
			{
				return this._TimeTypes.Entity;
			}
			set
			{
				TimeTypes previousValue = this._TimeTypes.Entity;
				if (((previousValue != value) 
							|| (this._TimeTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeTypes.Entity = null;
						previousValue.Records.Remove(this);
					}
					this._TimeTypes.Entity = value;
					if ((value != null))
					{
						value.Records.Add(this);
						this._TimeTypeId = value.TimeTypeId;
					}
					else
					{
						this._TimeTypeId = default(int);
					}
					this.SendPropertyChanged("TimeTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class TimeStatistics : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DatasetSize;
		
		private int _ProcessorCount;
		
		private int _TimeTypeId;
		
		private decimal _Mean;
		
		private decimal _Median;
		
		private decimal _Average;
		
		private decimal _Q1Mean;
		
		private decimal _Q3Mean;
		
		private decimal _Mode;
		
		private int _LanguageId;
		
		private int _EnvironmentId;
		
		private decimal _Min;
		
		private decimal _Max;
		
		private decimal _MeanAverage;
		
		private int _RecordCount;
		
		private int _TimeStatisticId;
		
		private System.Nullable<System.DateTime> _BatchTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDatasetSizeChanging(int value);
    partial void OnDatasetSizeChanged();
    partial void OnProcessorCountChanging(int value);
    partial void OnProcessorCountChanged();
    partial void OnTimeTypeIdChanging(int value);
    partial void OnTimeTypeIdChanged();
    partial void OnMeanChanging(decimal value);
    partial void OnMeanChanged();
    partial void OnMedianChanging(decimal value);
    partial void OnMedianChanged();
    partial void OnAverageChanging(decimal value);
    partial void OnAverageChanged();
    partial void OnQ1MeanChanging(decimal value);
    partial void OnQ1MeanChanged();
    partial void OnQ3MeanChanging(decimal value);
    partial void OnQ3MeanChanged();
    partial void OnModeChanging(decimal value);
    partial void OnModeChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnEnvironmentIdChanging(int value);
    partial void OnEnvironmentIdChanged();
    partial void OnMinChanging(decimal value);
    partial void OnMinChanged();
    partial void OnMaxChanging(decimal value);
    partial void OnMaxChanged();
    partial void OnMeanAverageChanging(decimal value);
    partial void OnMeanAverageChanged();
    partial void OnRecordCountChanging(int value);
    partial void OnRecordCountChanged();
    partial void OnTimeStatisticIdChanging(int value);
    partial void OnTimeStatisticIdChanged();
    partial void OnBatchTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBatchTimeChanged();
    #endregion
		
		public TimeStatistics()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatasetSize", DbType="Int NOT NULL")]
		public int DatasetSize
		{
			get
			{
				return this._DatasetSize;
			}
			set
			{
				if ((this._DatasetSize != value))
				{
					this.OnDatasetSizeChanging(value);
					this.SendPropertyChanging();
					this._DatasetSize = value;
					this.SendPropertyChanged("DatasetSize");
					this.OnDatasetSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorCount", DbType="Int NOT NULL")]
		public int ProcessorCount
		{
			get
			{
				return this._ProcessorCount;
			}
			set
			{
				if ((this._ProcessorCount != value))
				{
					this.OnProcessorCountChanging(value);
					this.SendPropertyChanging();
					this._ProcessorCount = value;
					this.SendPropertyChanged("ProcessorCount");
					this.OnProcessorCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTypeId", DbType="Int NOT NULL")]
		public int TimeTypeId
		{
			get
			{
				return this._TimeTypeId;
			}
			set
			{
				if ((this._TimeTypeId != value))
				{
					this.OnTimeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TimeTypeId = value;
					this.SendPropertyChanged("TimeTypeId");
					this.OnTimeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mean", DbType="Decimal(18,0) NOT NULL")]
		public decimal Mean
		{
			get
			{
				return this._Mean;
			}
			set
			{
				if ((this._Mean != value))
				{
					this.OnMeanChanging(value);
					this.SendPropertyChanging();
					this._Mean = value;
					this.SendPropertyChanged("Mean");
					this.OnMeanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Median", DbType="Decimal(18,0) NOT NULL")]
		public decimal Median
		{
			get
			{
				return this._Median;
			}
			set
			{
				if ((this._Median != value))
				{
					this.OnMedianChanging(value);
					this.SendPropertyChanging();
					this._Median = value;
					this.SendPropertyChanged("Median");
					this.OnMedianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Average", DbType="Decimal(18,0) NOT NULL")]
		public decimal Average
		{
			get
			{
				return this._Average;
			}
			set
			{
				if ((this._Average != value))
				{
					this.OnAverageChanging(value);
					this.SendPropertyChanging();
					this._Average = value;
					this.SendPropertyChanged("Average");
					this.OnAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q1Mean", DbType="Decimal(18,0) NOT NULL")]
		public decimal Q1Mean
		{
			get
			{
				return this._Q1Mean;
			}
			set
			{
				if ((this._Q1Mean != value))
				{
					this.OnQ1MeanChanging(value);
					this.SendPropertyChanging();
					this._Q1Mean = value;
					this.SendPropertyChanged("Q1Mean");
					this.OnQ1MeanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q3Mean", DbType="Decimal(18,0) NOT NULL")]
		public decimal Q3Mean
		{
			get
			{
				return this._Q3Mean;
			}
			set
			{
				if ((this._Q3Mean != value))
				{
					this.OnQ3MeanChanging(value);
					this.SendPropertyChanging();
					this._Q3Mean = value;
					this.SendPropertyChanged("Q3Mean");
					this.OnQ3MeanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Decimal(18,0) NOT NULL")]
		public decimal Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL")]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentId", DbType="Int NOT NULL")]
		public int EnvironmentId
		{
			get
			{
				return this._EnvironmentId;
			}
			set
			{
				if ((this._EnvironmentId != value))
				{
					this.OnEnvironmentIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentId = value;
					this.SendPropertyChanged("EnvironmentId");
					this.OnEnvironmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Min", DbType="Decimal(18,0) NOT NULL")]
		public decimal Min
		{
			get
			{
				return this._Min;
			}
			set
			{
				if ((this._Min != value))
				{
					this.OnMinChanging(value);
					this.SendPropertyChanging();
					this._Min = value;
					this.SendPropertyChanged("Min");
					this.OnMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max", DbType="Decimal(18,0) NOT NULL")]
		public decimal Max
		{
			get
			{
				return this._Max;
			}
			set
			{
				if ((this._Max != value))
				{
					this.OnMaxChanging(value);
					this.SendPropertyChanging();
					this._Max = value;
					this.SendPropertyChanged("Max");
					this.OnMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeanAverage", DbType="Decimal(18,0) NOT NULL")]
		public decimal MeanAverage
		{
			get
			{
				return this._MeanAverage;
			}
			set
			{
				if ((this._MeanAverage != value))
				{
					this.OnMeanAverageChanging(value);
					this.SendPropertyChanging();
					this._MeanAverage = value;
					this.SendPropertyChanged("MeanAverage");
					this.OnMeanAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordCount", DbType="Int NOT NULL")]
		public int RecordCount
		{
			get
			{
				return this._RecordCount;
			}
			set
			{
				if ((this._RecordCount != value))
				{
					this.OnRecordCountChanging(value);
					this.SendPropertyChanging();
					this._RecordCount = value;
					this.SendPropertyChanged("RecordCount");
					this.OnRecordCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStatisticId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TimeStatisticId
		{
			get
			{
				return this._TimeStatisticId;
			}
			set
			{
				if ((this._TimeStatisticId != value))
				{
					this.OnTimeStatisticIdChanging(value);
					this.SendPropertyChanging();
					this._TimeStatisticId = value;
					this.SendPropertyChanged("TimeStatisticId");
					this.OnTimeStatisticIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> BatchTime
		{
			get
			{
				return this._BatchTime;
			}
			set
			{
				if ((this._BatchTime != value))
				{
					this.OnBatchTimeChanging(value);
					this.SendPropertyChanging();
					this._BatchTime = value;
					this.SendPropertyChanged("BatchTime");
					this.OnBatchTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class TimeTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimeTypeId;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Records> _Records;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimeTypeIdChanging(int value);
    partial void OnTimeTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TimeTypes()
		{
			this._Records = new EntitySet<Records>(new Action<Records>(this.attach_Records), new Action<Records>(this.detach_Records));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TimeTypeId
		{
			get
			{
				return this._TimeTypeId;
			}
			set
			{
				if ((this._TimeTypeId != value))
				{
					this.OnTimeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TimeTypeId = value;
					this.SendPropertyChanged("TimeTypeId");
					this.OnTimeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Records_TimeTypes", Storage="_Records", ThisKey="TimeTypeId", OtherKey="TimeTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Records> Records
		{
			get
			{
				return this._Records;
			}
			set
			{
				this._Records.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Records(Records entity)
		{
			this.SendPropertyChanging();
			entity.TimeTypes = this;
		}
		
		private void detach_Records(Records entity)
		{
			this.SendPropertyChanging();
			entity.TimeTypes = null;
		}
	}
}
#pragma warning restore 1591
